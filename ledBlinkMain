;
; GPIOINPUTHIGHIMP.ASM
;
; CREATED: 10/24/2021 6:06:15 PM
; AUTHOR : JON
;
; DEMO GPIO INPUT HIGH IMPEDANCE SWITCHED LED



.ORG 0
     JMP  MAIN
.ORG 0X02
     CALL SENSOR_ISR



MAIN:
     LDI  R16, HIGH(RAMEND)   ; SET UP STACK
     OUT  SPH, R16            ; *
     LDI  R16, LOW(RAMEND)    ; *
     OUT  SPL, R16            ; *     


     ;CONFIG GPIO
     CBI  DDRD, DDD2          ; MAKE D2 INPUT (SWITCH)
     CBI  PORTD, PD2           ; MAKE D2 HIGH-IMPEDANCE

     
     SBI  DDRB, DDB4          ; SET PB4 OUT (DIRECTION REGISTER)
     SBI  DDRB, DDB3          ; SET PB3 OUT
     SBI  DDRB, DDB2          ; SET PB2 OUT
     SBI  DDRB, DDB1          ; SET PB1 OUT
     SBI  DDRB, DDB5

     ; SETUP INTERRUPT
     LDI  R20,1<<ISC01
     STS  EICRA,R20
     LDI  R20,1<<INT0
     OUT  EIMSK,R20
     SEI
     

BLINK:
     SBI  PORTB, PB4          ; TURN THE LED ON
     CALL DELAY               ;
     CBI  PORTB, PB4          ; TURN THE LED OFF
     CALL DELAY               ;
     SBI  PORTB, PB3          ; TURN THE LED ON
     CALL DELAY               ;
     CBI  PORTB, PB3          ; TURN THE LED OFF
     CALL DELAY               ;
     SBI  PORTB, PB2          ; TURN THE LED ON
     CALL DELAY               ;
     CBI  PORTB, PB2          ; TURN THE LED OFF
     CALL DELAY               ;
     SBI  PORTB, PB1          ; TURN THE LED ON
     CALL DELAY               ;
     CBI  PORTB, PB1          ; TURN THE LED OFF
     CALL LONGDELAY
     
     
     RJMP BLINK               ;
     


ENDMAIN:
     RJMP ENDMAIN


 

TURNON:
     LDI  R16,0B00011110
     OUT  PORTB,R16
     RET

PHOTO:
     LDI  R16,0B00011110
     OUT  PORTB,R16
     LDI  R20,100             ; RESET ISR DELAY
     LDI  R21,50
     LDI  R22,200
     LDI  R23,9
     CALL LONGDELAY           ; BEGIN COUNTDOWN
     CBI  PORTB,PB1
     CALL LONGDELAY
     CBI  PORTB,PB2
     CALL LONGDELAY
     CBI  PORTB,PB3
     CALL LONGDELAY
     CBI  PORTB,PB4
     CALL LONGDELAY
     CALL FLASH
     CALL LONGDELAY
     CALL LONGDELAY
     CALL TURNON
     RET
     

FLASH:
     SBI  PORTB,PB5
     CALL DELAY
     CBI  PORTB,PB5
     RET


; DELAY IN MILLISECONDS
;-------------------------------
DELAY:
     PUSH R20                 ; HOLD R20 VALUE JUST IN CASE

                              ; SET TIMER1 FOR .2 SECONDS
     LDI  R20,HIGH(65536-3125)
     STS  TCNT1H,R20
     LDI  R20,LOW(65536-3125)
     STS  TCNT1L,R20
     
     LDI  R20,0
     STS  TCCR1A,R20          ; NORMAL MODE
     LDI  R20,4
     STS  TCCR1B,R20          ; PRESCALER 1024 / START

AGAIN:
     SBIS TIFR1,TOV1
     RJMP AGAIN

     LDI  R20,0
     STS  TCCR1B,R20          ; STOP THE CLOCK
     LDI  R20,(1<<TOV1)
     OUT  TIFR1,R20           ; CLEAR TOV1

     POP  R20                 ; RESTORE R20
     RET                      ; END DELAY



LONGDELAY:
     PUSH R20                 ; HOLD R20 VALUE JUST IN CASE

                              ; SET TIMER1 FOR .2 SECONDS
     LDI  R20,HIGH(65536-12500)
     STS  TCNT1H,R20
     LDI  R20,LOW(65536-12500)
     STS  TCNT1L,R20

     LDI  R20,0
     STS  TCCR1A,R20          ; NORMAL MODE
     LDI  R20,5
     STS  TCCR1B,R20          ; PRESCALER 1024 / START

AGAIN1:
     SBIS TIFR1,TOV1
     RJMP AGAIN1

     LDI  R20,0
     STS  TCCR1B,R20          ; STOP THE CLOCK
     LDI  R20,(1<<TOV1)
     OUT  TIFR1,R20           ; CLEAR TOV1

     POP  R20                 ; RESTORE R20
     RET                      ; END LONGDELAY
     



SENSOR_ISR:
     CALL TURNON
     CALL LONGDELAY

     LDI  R20,100			; LOAD 100 INTO R20
D1S_1:
     
     LDI  R21,50			; LOAD 100 INTO R21
D1S_2:

     LDI  R22,200			; LOAD 100 INTO R22
D1S_3:

     LDI  R24,9			; LOAD 9 INTO R24
D1S_4:
     NOP				     ; NULL CYCLE (1)
     NOP				     ; NULL CYCLE (1)
     DEC  R24			     ; DECREMENT R24 (1)
     SBIC PIND,PD2
     CALL PHOTO
     BRNE D1S_4		     ; BRANCH TO D1S_4 IF(!Z) (2/1)

     DEC  R22			     ; DECREMENT R22
     BRNE D1S_3		     ; BRANCH TO D1S_3 IF(!Z)

     DEC  R21			     ; DECREMENT R21
     BRNE D1S_2			; BRANCH TO D1S_2 IF(!Z)

     DEC R20			     ; DECREMENT R20
     BRNE D1S_1			; BRANCH TO D1S_1 IF(!Z)



     RETI
