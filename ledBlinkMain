;
; GPIOinputHighImp.asm
;
; Created: 10/24/2021 6:06:15 PM
; Author : Jon
;
; demo GPIO input high impedance switched led


main:
     ldi  r16, high(RAMEND)   ; set up stack
     out  SPH, r16            ; *
     ldi  r16, low(RAMEND)    ; *
     out  SPL, r16            ; *

     ;config GPIO
     cbi  DDRB, DDB0          ; make B0 input (switch)
     cbi  PORTB, PB0          ; make B0 high-impedance

     ;sbi  DDRD, DDD7          ; make D7 outbput
     ;cbi  PORTD, PD7          ; make sure LED is off
     

     sbi  DDRB, DDB5          ; set PB5 out (direction register)
     sbi  DDRD, DDD5          ; set PD5 out
     sbi  DDRD, DDD4          ; set PD4 out
     sbi  DDRD, DDD3          ; set PD3 out
     sbi  DDRD, DDD2          ; set PD2 out

blink:
     sbi  PORTB, PB5          ; turn the LED on
     call Delay               ;
     cbi  PORTB, PB5          ; turn the LED off
     call Delay               ;

     sbi  PORTD, PD5          ; turn on PD5
     call Delay
     cbi  PORTD, PD5          ; turn off PD5
     call Delay
     sbi  PORTD, PD4          ; turn on PD4
     call Delay
     cbi  PORTD, PD4          ; turn off PD4
     call Delay
     sbi  PORTD, PD3          ; turn on PD3
     call Delay
     cbi  PORTD, PD3          ; turn off PD3
     call Delay
     sbi  PORTD, PD2          ; turn on PD2
     call Delay
     cbi  PORTD, PD2          ; turn off PD2
     call LongDelay
     
     call scan_input
     rjmp blink               ;
     


endMain:
     rjmp endMain

     
     
     

sensor:
     
; timer

 

turnOff:
     cbi  PORTB, PD5          ; output reg
     cbi  PORTD, PD5
     cbi  PORTD, PD4
     cbi  PORTD, PD3
     cbi  PORTD, PD2
     
     call scan_input
     

scan_input:
     sbic PINB, PINB0         ; if pin low
     ;cbi  PORTD, PD7         ; clear PD7 to turn LED off
     ;call turnOff
     sbis PINB, PINB0         ; else  (input register)
     ;sbi  PORTD, PD7         ; set PD7 to turn LED on
     ret
     rjmp scan_input          ; 


     
     



; Delay in milliseconds
;-------------------------------
Delay:
     push r20                 ; hold r20 value just in case

                              ; set timer1 for .2 seconds
     ldi  r20,HIGH(65536-2500)
     sts  tcnt1h,r20
     ldi  r20,LOW(65536-2500)
     sts  tcnt1l,r20

     ldi  r20,0
     sts  tccr1a,r20          ; normal mode
     ldi  r20,3
     sts  tccr1b,r20          ; prescaler 1024 / start

AGAIN:
     sbis tifr1,tov1
     rjmp AGAIN

     ldi  r20,0
     sts  tccr1b,r20          ; stop the clock
     ldi  r20,(1<<tov1)
     out  tifr1,r20           ; clear tov1

     pop  r20                 ; restore r20
     ret                      ; end Delay



LongDelay:
     push r20                 ; hold r20 value just in case

                              ; set timer1 for .2 seconds
     ldi  r20,HIGH(65536-31250)
     sts  tcnt1h,r20
     ldi  r20,LOW(65536-31250)
     sts  tcnt1l,r20

     ldi  r20,0
     sts  tccr1a,r20          ; normal mode
     ldi  r20,3
     sts  tccr1b,r20          ; prescaler 1024 / start

AGAIN1:
     sbis tifr1,tov1
     rjmp AGAIN1

     ldi  r20,0
     sts  tccr1b,r20          ; stop the clock
     ldi  r20,(1<<tov1)
     out  tifr1,r20           ; clear tov1

     pop  r20                 ; restore r20
     ret                      ; end LongDelay
     
