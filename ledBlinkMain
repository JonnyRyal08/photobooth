;
; GPIOinputHighImp.asm
;
; Created: 10/24/2021 6:06:15 PM
; Author : Jon
;
; demo GPIO input high impedance switched led



.org 0
     jmp  main
.org 0x02
     call sensor_isr



main:
     ldi  r16, high(RAMEND)   ; set up stack
     out  SPH, r16            ; *
     ldi  r16, low(RAMEND)    ; *
     out  SPL, r16            ; *     


     ;config GPIO
     cbi  DDRD, DDD2          ; make D2 input (switch)
     cbi  PORTD, PD2           ; make D2 high-impedance

     
     sbi  DDRB, DDB4          ; set PB4 out (direction register)
     sbi  DDRB, DDB3          ; set PB3 out
     sbi  DDRB, DDB2          ; set PB2 out
     sbi  DDRB, DDB1          ; set PB1 out
     sbi  DDRB, DDB5

     ; setup interrupt
     ldi  r20,1<<ISC01
     sts  eicra,r20
     ldi  r20,1<<INT0
     out  eimsk,r20
     sei
     

blink:
     sbi  PORTB, PB4          ; turn the LED on
     call Delay               ;
     cbi  PORTB, PB4          ; turn the LED off
     call Delay               ;
     sbi  PORTB, PB3          ; turn the LED on
     call Delay               ;
     cbi  PORTB, PB3          ; turn the LED off
     call Delay               ;
     sbi  PORTB, PB2          ; turn the LED on
     call Delay               ;
     cbi  PORTB, PB2          ; turn the LED off
     call Delay               ;
     sbi  PORTB, PB1          ; turn the LED on
     call Delay               ;
     cbi  PORTB, PB1          ; turn the LED off
     call LongDelay
     
     
     rjmp blink               ;
     


endMain:
     rjmp endMain


 

turnOn:
     ldi  r16,0b00011110
     out  portb,r16
     ret

Photo:
     ldi  r16,0b00011110
     out  portb,r16
     ldi  r20,100             ; reset timers
     ldi  r21,50
     ldi  r22,200
     ldi  r23,9
     call LongDelay           ; begin countdown
     cbi  portb,pb1
     call LongDelay
     cbi  portb,pb2
     call LongDelay
     cbi  portb,pb3
     call LongDelay
     cbi  portb,pb4
     call LongDelay
     call flash
     call LongDelay
     call LongDelay
     call turnOn
     ret
     

flash:
     sbi  PORTB,PB5
     call delay
     cbi  PORTB,PB5
     ret


; Delay in milliseconds
;-------------------------------
Delay:
     push r20                 ; hold r20 value just in case

                              ; set timer1 for .2 seconds
     ldi  r20,HIGH(65536-3125)
     sts  tcnt1h,r20
     ldi  r20,LOW(65536-3125)
     sts  tcnt1l,r20
     
     ldi  r20,0
     sts  tccr1a,r20          ; normal mode
     ldi  r20,4
     sts  tccr1b,r20          ; prescaler 1024 / start

AGAIN:
     sbis tifr1,tov1
     rjmp AGAIN

     ldi  r20,0
     sts  tccr1b,r20          ; stop the clock
     ldi  r20,(1<<tov1)
     out  tifr1,r20           ; clear tov1

     pop  r20                 ; restore r20
     ret                      ; end Delay



LongDelay:
     push r20                 ; hold r20 value just in case

                              ; set timer1 for .2 seconds
     ldi  r20,HIGH(65536-12500)
     sts  tcnt1h,r20
     ldi  r20,LOW(65536-12500)
     sts  tcnt1l,r20

     ldi  r20,0
     sts  tccr1a,r20          ; normal mode
     ldi  r20,5
     sts  tccr1b,r20          ; prescaler 1024 / start

AGAIN1:
     sbis tifr1,tov1
     rjmp AGAIN1

     ldi  r20,0
     sts  tccr1b,r20          ; stop the clock
     ldi  r20,(1<<tov1)
     out  tifr1,r20           ; clear tov1

     pop  r20                 ; restore r20
     ret                      ; end LongDelay
     



sensor_isr:
     call turnOn

     ldi  r20,100			; load 100 into r20
D1s_1:
     
     ldi  r21,50			; load 100 into r21
D1s_2:

     ldi  r22,200			; load 100 into r22
D1s_3:

     ldi  r24,9			; load 9 into r24
D1s_4:
     nop				     ; null cycle (1)
     nop				     ; null cycle (1)
     dec  r24			     ; decrement r24 (1)
     sbic pind,pd2
     call Photo
     brne D1s_4		     ; branch to D1s_4 if(!Z) (2/1)

     dec  r22			     ; decrement r22
     brne D1s_3		     ; branch to D1s_3 if(!Z)

     dec  r21			     ; decrement r21
     brne D1s_2			; branch to D1s_2 if(!Z)

     dec r20			     ; decrement r20
     brne D1s_1			; branch to D1s_1 if(!Z)



     reti
